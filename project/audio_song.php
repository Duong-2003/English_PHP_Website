<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tr√¨nh Ph√°t Nh·∫°c</title>
    <style>
        /* CƒÉn ch·ªânh v√† thi·∫øt k·∫ø cho giao di·ªán */
        .mediaItemContainer--3BwC2 {
            max-width: 600px;
            margin: 0 auto;
        }

        .waveformContainer--MJW1W {
            height: 50px;
            background: #f0f0f0;
            position: relative;
        }

        .progressBar--Qyz-N {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            background: #007bff;
        }

        .playButton--gXsLw button {
            background: #007bff;
            color: white;
            padding: 10px;
            border: none;
            cursor: pointer;
            border-radius: 50%;
        }

        .volumeBar--ntZoi input {
            width: 100%;
        }

        .footerSection--DnzP7 {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .volumeBtn--ucfQI {
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div class="mediaItemContainer--3BwC2">
        <div class="titleSection--OI1oP">
            <h2>Danh S√°ch B√†i H√°t</h2>
            <div id="songList"></div>
        </div>

        <div class="waveformSection--fmXE8">
            <div class="waveformContainer--MJW1W">
                <div class="trackBar--XcykU">
                    <div class="progressBar--Qyz-N" style="width: 0%;"></div>
                </div>
            </div>
            <div class="waveformNumbers--droUf">0:00</div>
        </div>

        <div class="playButtonSection--LVOxN">
            <div class="playButton--gXsLw">
                <button class="playPauseButton" aria-label="Ch∆°i / T·∫°m d·ª´ng">
                    <span class="playIcon">‚ñ∂Ô∏è</span>
                </button>
            </div>
        </div>

        <hr>

        <div class="footerSection--DnzP7">
            <div class="container--Qs3az">
                <button class="volumeBtn--ucfQI" aria-label="√Çm l∆∞·ª£ng">
                    <span class="icon--L+lBh volume--s7R+A">üîä</span>
                </button>
                <div class="volumeBar--ntZoi">
                    <input type="range" min="0" max="1" step="0.01" value="1" aria-label="√Çm l∆∞·ª£ng" class="volumeControl">
                </div>
            </div>
        </div>
    </div>

    <audio id="audioPlayer" preload="auto"></audio>

    <script>
        // L·∫•y danh s√°ch b√†i h√°t t·ª´ server
        fetch('../project/get_songs.php')
            .then(response => response.json())
            .then(songs => {
                const songListDiv = document.getElementById('songList');
                songs.forEach(song => {
                    const songItem = document.createElement('div');
                    songItem.innerHTML = `<button onclick="playSong('${song.audio_file}', '${song.title}')">${song.title}</button>`;
                    songListDiv.appendChild(songItem);
                });
            })
            .catch(error => {
                console.error('L·ªói khi l·∫•y danh s√°ch b√†i h√°t:', error);
            });

        // L·∫•y c√°c ph·∫ßn t·ª≠ DOM
        const audio = document.getElementById('audioPlayer');
        const playPauseButton = document.querySelector('.playPauseButton');
        const volumeControl = document.querySelector('.volumeControl');
        const progressBar = document.querySelector('.progressBar--Qyz-N');
        const waveformNumbers = document.querySelector('.waveformNumbers--droUf');

        // Th·ª±c hi·ªán ch·ª©c nƒÉng Play / Pause
        playPauseButton.addEventListener('click', () => {
            if (audio.paused) {
                audio.play().catch(error => {
                    console.error('L·ªói khi ph√°t √¢m thanh:', error);
                });
                playPauseButton.innerHTML = "‚è∏Ô∏è";  // Bi·ªÉu t∆∞·ª£ng t·∫°m d·ª´ng
            } else {
                audio.pause();
                playPauseButton.innerHTML = "‚ñ∂Ô∏è";  // Bi·ªÉu t∆∞·ª£ng ph√°t
            }
        });

        // ƒêi·ªÅu ch·ªânh √¢m l∆∞·ª£ng
        volumeControl.addEventListener('input', (event) => {
            audio.volume = event.target.value;
        });

        // C·∫≠p nh·∫≠t thanh ti·∫øn tr√¨nh
        audio.addEventListener('timeupdate', () => {
            const progress = (audio.currentTime / audio.duration) * 100;
            progressBar.style.width = `${progress}%`;

            // C·∫≠p nh·∫≠t th·ªùi gian
            const minutes = Math.floor(audio.currentTime / 60);
            const seconds = Math.floor(audio.currentTime % 60);
            waveformNumbers.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        });

        // ƒê·∫£m b·∫£o thanh ti·∫øn tr√¨nh ƒë∆∞·ª£c c·∫≠p nh·∫≠t khi ho√†n th√†nh b√†i h√°t
        audio.addEventListener('ended', () => {
            progressBar.style.width = '0%';
            waveformNumbers.textContent = '0:00';
            playPauseButton.innerHTML = "‚ñ∂Ô∏è";  // Bi·ªÉu t∆∞·ª£ng ph√°t khi k·∫øt th√∫c
        });

        // Ch∆°i b√†i h√°t
        function playSong(audioUrl, title) {
            audio.src = audioUrl;
            audio.play()
                .catch(error => {
                    console.error('L·ªói khi ph√°t √¢m thanh:', error);
                });
            playPauseButton.innerHTML = "‚è∏Ô∏è";  // Bi·ªÉu t∆∞·ª£ng t·∫°m d·ª´ng
        }
    </script>
</body>
</html>
